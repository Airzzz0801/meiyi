<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!--
        spring可以自动去扫描base-package下面或者子包下面的java文件，
        如果扫描到有@Component @Controller @Service @Repository等这些注解的类，则把这些类注册为bean
    -->
    <context:component-scan base-package="com.crm.controller" >
    </context:component-scan>
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <bean id="test" class="com.crm.controller.testController"></bean>
    <!--
    	模型解析，在请求时为模型视图名称添加前后缀
    	比如在controller类中需要请求/WEB-INF/page/index.jsp文件，直接写index就可以了
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/page/" p:suffix=".jsp" />
    <!--采用以下配置支持controller中返回String，否则会当成是视图名称和路劲处理-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- String结果数据支持，此解析器要放在JSON解析器前 -->
                <ref bean="stringHttpMessageConverter"/>
                <!-- JSON结果数据支持(使用fastjson) -->
                <ref bean="fastJsonHttpMessageConverter"/>
                <!-- JSON结果数据支持(使用jackson) -->
                <!-- <ref bean="mappingJacksonHttpMessageConverter" /> -->
            </list>
        </property>
    </bean>
    <!-- String转化器 -->
    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- JSON转化器(jackson版本) -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper">
            <!-- <bean class="com.threeStepTech.ObjectMapper.CustomObjectMapper"/> -->
            <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                <property name="dateFormat">
                    <bean class="java.text.SimpleDateFormat">
                        <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                    </bean>
                </property>
                <property name="serializationInclusion">
                    <!-- 注入枚举类型,过滤对象，这样JSON中不会输出null -->
                    <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                </property>
            </bean>
        </property>
        <property name="supportedMediaTypes">
            <list>
                <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
</beans>